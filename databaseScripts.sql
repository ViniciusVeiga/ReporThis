CREATE SCHEMA REPORTHIS;

-- NOT MAPPED YET -- 
    -- REPORTHIS.USER -> IMAGE COLUMN
    -- FILE_REPORT
    -- IMAGE_REPORT
    -- FILE_COMMENT

-- TABLE CREATION --
CREATE TABLE IF NOT EXISTS REPORTHIS.USER(
    ID SERIAL,
    EMAIL VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    REGISTRY VARCHAR(32),
    PASSWORD CHAR(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS REPORTHIS.MODERATOR(
    ID SERIAL
);

CREATE TABLE IF NOT EXISTS REPORTHIS.LOCATION(
    ID SERIAL,
    NAME VARCHAR(64) NOT NULL,
    DESCRIPTION VARCHAR(255),
    X NUMERIC(7,2) NOT NULL,
    Y NUMERIC(7,2) NOT NULL,
    Z NUMERIC(7,2) NOT NULL
);

CREATE TABLE IF NOT EXISTS REPORTHIS.REPORT_STATUS(
    ID SERIAL,
    NAME VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS REPORTHIS.NOTIFICATION(
    ID SERIAL,
    RECEIVER_ID INTEGER NOT NULL,
    TRIGGER_ID INTEGER NOT NULL,
    CONTENT VARCHAR(1024) NOT NULL,
    READ BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS REPORTHIS.REPORT_CATEGORY(
    ID SERIAL,
    NAME VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS REPORTHIS.REPORT(
    ID SERIAL,
    OWNER_ID INTEGER NOT NULL,
    MODERATOR_ID INTEGER,
    CATEGORY_ID INTEGER NOT NULL,
    STATUS_ID INTEGER NOT NULL,
    LOCATION_ID INTEGER NOT NULL,
    TITLE VARCHAR(256) NOT NULL,
    DESCRIPTION VARCHAR(4096) NOT NULL,
    APROVED BOOLEAN NOT NULL,
    CREATED TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS REPORTHIS.COMMENT(
    ID SERIAL,
    REPORT_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    CONTENT VARCHAR(1024) NOT NULL,
    COMMENTED TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- PRIMARY KEYS --
ALTER TABLE REPORTHIS.USER ADD CONSTRAINT PK_USER PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.MODERATOR ADD CONSTRAINT PK_MODERATOR PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.LOCATION ADD CONSTRAINT PK_LOCATION PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.REPORT_STATUS ADD CONSTRAINT PK_REPORT_STATUS PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.NOTIFICATION ADD CONSTRAINT PK_NOTIFICATION PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.REPORT_CATEGORY ADD CONSTRAINT PK_REPORT_CATEGORY PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.REPORT ADD CONSTRAINT PK_REPORT PRIMARY KEY(ID);
ALTER TABLE REPORTHIS.COMMENT ADD CONSTRAINT PK_COMMENT PRIMARY KEY(ID);

-- UNIQUE --
ALTER TABLE REPORTHIS.USER ADD CONSTRAINT UQ_USER UNIQUE (EMAIL);

-- FOREIGN KEYS --
ALTER TABLE REPORTHIS.MODERATOR ADD CONSTRAINT FK_MODERATOR FOREIGN KEY(ID) REFERENCES REPORTHIS.USER(ID);
ALTER TABLE REPORTHIS.NOTIFICATION ADD CONSTRAINT FK_NOTIFICATION_RC FOREIGN KEY(RECEIVER_ID) REFERENCES REPORTHIS.USER(ID);
ALTER TABLE REPORTHIS.NOTIFICATION ADD CONSTRAINT FK_NOTIFICATION_TR FOREIGN KEY(TRIGGER_ID) REFERENCES REPORTHIS.USER(ID);
ALTER TABLE REPORTHIS.REPORT ADD CONSTRAINT FK_REPORT_OW FOREIGN KEY(OWNER_ID) REFERENCES REPORTHIS.USER(ID);
ALTER TABLE REPORTHIS.REPORT ADD CONSTRAINT FK_REPORT_MD FOREIGN KEY(MODERATOR_ID) REFERENCES REPORTHIS.USER(ID);
ALTER TABLE REPORTHIS.REPORT ADD CONSTRAINT FK_REPORT_CT FOREIGN KEY(CATEGORY_ID) REFERENCES REPORTHIS.REPORT_CATEGORY(ID);
ALTER TABLE REPORTHIS.REPORT ADD CONSTRAINT FK_REPORT_ST FOREIGN KEY(STATUS_ID) REFERENCES REPORTHIS.REPORT_STATUS(ID);
ALTER TABLE REPORTHIS.REPORT ADD CONSTRAINT FK_REPORT_LC FOREIGN KEY(LOCATION_ID) REFERENCES REPORTHIS.LOCATION(ID);
ALTER TABLE REPORTHIS.COMMENT ADD CONSTRAINT FK_COMMENT_RP FOREIGN KEY(REPORT_ID) REFERENCES REPORTHIS.REPORT(ID);
ALTER TABLE REPORTHIS.COMMENT ADD CONSTRAINT FK_COMMENT_US FOREIGN KEY(USER_ID) REFERENCES REPORTHIS.USER(ID);